#@ # 
#@ # Running icc2_shell Version O-2018.06-SP1 for linux64 -- Jul 17, 2018
#@ # Date:   Tue Aug 26 08:26:21 2025
#@ # Run by: ICer@IC_EDA
#@ 

sh rm /home/ICer/SerDes/pnr/setup/script/SerDes.dlib/SerDes_pl/design.ndm.lock
set design SerDes
set design_lib_path /home/ICer/SerDes/pnr/setup/script
open_block $design_lib_path/${design}.dlib:${design}_pl.design
copy_block -from_block ${design}.dlib:${design}_pl.design -to_block ${design}_cts
current_block ${design}_cts.design
set_host_options -max_cores 8
# Pre-CTS checks
check_design -checks pre_clock_tree_stage
suppress_message -force CMD-013
suppress_message -force CMD-013; report_design_mismatch -check_design >> /home/ICer/SerDes/pnr/cts/script/check_design2025Aug26082624.log
suppress_message -force CMD-013; check_scan_chain >> /home/ICer/SerDes/pnr/cts/script/check_design2025Aug26082624.log
suppress_message -force CMD-013; check_mv_design >> /home/ICer/SerDes/pnr/cts/script/check_design2025Aug26082624.log
suppress_message -force CMD-013; check_legality >> /home/ICer/SerDes/pnr/cts/script/check_design2025Aug26082624.log
suppress_message -force CMD-013; design_extraction_check >> /home/ICer/SerDes/pnr/cts/script/check_design2025Aug26082624.log
suppress_message -force CMD-013; check_timing >> /home/ICer/SerDes/pnr/cts/script/check_design2025Aug26082624.log
suppress_message -force CMD-013; check_clock_trees >> /home/ICer/SerDes/pnr/cts/script/check_design2025Aug26082624.log
suppress_message -force CMD-013; check_hier_design -stage pre_clock_tree >> /home/ICer/SerDes/pnr/cts/script/check_design2025Aug26082624.log
unsuppress_message CMD-013
# --- Reset all option and configration for skew and latency
set_ignored_layers -max_routing_layer M8 -min_routing_layer M1
remove_clock_tree_options -all -target_skew -target_latency
# --- Clock sources
report_clocks
report_clock_qor -type structure
# ================================================ #
# ================= Transitions ================== #
# ================================================ #
# set_driving_cell -lib_cell */*_BUF_2 -pin Z [get_ports clk_i]
set_input_transition -rise 0.2 {fun_sclk scan_clk}
set_input_transition -rise 0.3 {fun_pclk}
set_input_transition -fall 0.2 {fun_sclk fun_pclk scan_clk}
set_clock_groups -asynchronous     -group {fun_sclk}     -group {fun_pclk}
set_false_path -from [get_clocks fun_sclk] -to [get_clocks fun_pclk]
set_false_path -from [get_clocks fun_pclk] -to [get_clocks fun_sclk]
# ================================================ #
# ============== Clock_Exceptions ================ #
# ================================================ #
set_lib_cell_purpose -exclude cts [get_lib_cells -of [get_cells *]]
# ================================================ #
# ================= CTS_Cells ==================== #
# ================================================ #
# ----- Prefred ( High drive strength and INV Cells )
# ----- INV Prefred to resisitance of wire interconnect and trainstions
set_lib_cell_purpose -include cts */INVX2 ; # This prefred Cell high Drive strength
set_lib_cell_purpose -include cts */INVX4
set_lib_cell_purpose -include cts */*INVX8 ;
set_lib_cell_purpose -include cts */*INVX16 ;
# ================================================ #
# ================ Skew & Latency ================ #
# ================================================ #
set_clock_tree_options -target_skew 0.1 -clocks [get_clocks {fun_sclk scan_clk}]
set_clock_tree_options -target_skew 0.15 -clocks [get_clocks {fun_pclk}]
set_clock_tree_options -target_latency 0.7  -clocks [get_clocks {fun_pclk scan_clk}]
set_clock_tree_options -target_latency 0.8 -clocks [get_clocks {fun_sclk}]
set_max_capacitance 5 [get_clocks *]
#report_clock_trees
# ================================================ #
# ====================== NDR ===================== #
# ================================================ #
# defines non-default routing rules in the design.
create_routing_rule clk_network_NDR -multiplier_spacing 2 -multiplier_width 2
# ----- root:from port to first buffer
set_clock_routing_rules -net_type root -rules clk_network_NDR -max_routing_layer M7 -min_routing_layer M2
# ----- internal : from first buffer to last buffer before sink
set_clock_routing_rules -net_type internal -rules clk_network_NDR -max_routing_layer M7 -min_routing_layer M2
# ----- Sink >> from last buffer to sink(leaf) without NDR
set_clock_routing_rules -net_type sink -default_rule -max_routing_layer M7 -min_routing_layer M2
# over all Rules
report_routing_rules -verbose
# Special Clock net all Rules
report_clock_routing_rules
# ================================================ #
# ================== DRC/Options ================= #
# ================================================ #
set_max_transition -clock_path 0.500 [get_clocks {fun_pclk} ]
set_max_transition -clock_path 0.300 [get_clocks {fun_sclk scan_clk} ]
set_app_options -name cts.common.user_instance_name_prefix -value "CTS_"
# ================================================ #
# ====================== CRP ===================== #
# ================================================ #
# --- To reduce On-Chip Variation (OCV) effects, clock trees try to share as many buffers as possible.
set_app_options -name time.remove_clock_reconvergence_pessimism -value true
#set_app_options -name cts.compile.e
report_clock_settings
# ================================================ #
# ====================== Opt ===================== #
# ======
clock_opt -from build_clock -to build_clock
synthesize_clock_trees
redirect $::sh_dev_null { set_app_options -name opt.internal.current_block_utilization -value [report_utilization] }

clock_opt -from route_clock -to rou
clock_opt -from route_clock -to final_opto
set_app_options -as_user_default -list {route.global.global_route_topology_style 1}
route_group -all_clock_nets -reuse_existing_global_route true
set_app_options -as_user_default -list {route.global.global_route_topology_style 0}

redirect $::sh_dev_null { set_app_options -name opt.internal.current_block_utilization -value [report_utilization] }

redirect $::sh_dev_null { set_app_options -name opt.internal.current_block_utilization -value [report_utilization] }


set_app_options -as_user_default -list {route.global.debug_compact_coef 4}
set_app_options -as_user_default -list {route.global.debug_compact_coef 1}


set_app_options -as_user_default -list {route.global.debug_compact_coef 4}
set_app_options -as_user_default -list {route.global.debug_compact_coef 1}


set_app_options -as_user_default -list {route.global.debug_compact_coef 4}
set_app_options -as_user_default -list {route.global.debug_compact_coef 1}
route_group -all_clock_nets
# ================================================ #
# ================== Connect
# ================================================ #
sizeof_collection [get_cells "CTS_*"]
connect_pg_net -net "VDD" [get_pins -hierarchical "*/VDD*"]
connect_pg_net -net "VSS" [get_pins -hierarchical "*/VSS"]
check_pg_drc
check_routes -drc true
# =======
# =================== Reports ==================== #
# ================================================ #
report_clock_tree_options  >  ../report/clock_tree_options.rpt
report_routing_rules -verbose >  ../report/cts_routing_rules.rpt
report_clock_routing_rules >  ../report/cts_clock_routing_rules.rpt
report_ports -v
report_clock_settings >  ../report/cts_clk_setting.rpt
report_utilization -verbose > ../report/utilization.rpt
check_pg_drc  > ../report/pg_drc_final.rpt
check_routes -drc true > ../report/DRC.rpt
report_design > ../report/design.rpt
report_cell   > ../report/cells.rpt
report_qor    > ../report/qor.rpt
report_timing -delay_type min -nosplit > ../report/timing_min.rpt
report_timing -delay_type max -nosplit > ../report/timing_max.rpt
# ================================================ #
# =================== End_Step =================== #
# ================================================ #
write_def ../output/${design}.def
write_verilog -include {all} ../output/${design}.v
save_block ;
check_legality
check_routes -drc true
check_pg_drc
report_timing -delay_type max -max_paths 20
save_block
start_gui
gui_set_pref_value -category {SelectByNamePalette} -key {ObjectType} -value {Logical Cells}
win_set_filter -visible -class cell -filter {hard_macro_margin hard_margin route_blockage_margin soft_margin}
win_set_filter -visible -class placement_blockage -filter {wiring} -layer {0-77}
win_set_filter -expand_cell_types {soft_macro  }
win_set_select_class -visible {cell port bound routing_blockage shaping_blockage pg_region pin_blockage block_shielding topology_node topology_edge core_area die_area edit_group shape via terminal fill_cell placement_blockage }
win_set_filter -class cell -filter {cell_array hard_macro_margin hard_margin route_blockage_margin soft_margin}
win_set_filter -class placement_blockage -filter {wiring} -layer {0-77}
win_set_select_class {cell port bound routing_blockage shaping_blockage pg_region pin_blockage topology_node topology_edge edit_group shape via placement_blockage }
gui_set_layout_layer_visibility -toggle [get_layers -filter {mask_name == metal1} -quiet]
win_set_filter -visible -class routing_blockage -layer {4}
win_set_filter -visible -class shape -filter {} -layer {4}
win_set_filter -visible -class via -filter {} -layer {4}
win_set_filter -visible -class terminal -filter {}  -layer {4}
win_set_filter -class routing_blockage -layer {4}
win_set_filter -class shape -filter {} -layer {4}
win_set_filter -class via -filter {} -layer {4}
gui_set_layout_layer_visibility -toggle [get_layers -filter {mask_name == metal8} -quiet]
gui_set_layout_layer_visibility -toggle [get_layers -filter {mask_name == metal9} -quiet]
win_set_filter -visible -class routing_blockage -layer {4 25 28}
win_set_filter -visible -class shape -filter {} -layer {4 25 28}
win_set_filter -visible -class via -filter {} -layer {4 25 28}
win_set_filter -visible -class terminal -filter {}  -layer {4 25 28}
win_set_filter -class routing_blockage -layer {4 25 28}
win_set_filter -class shape -filter {} -layer {4 25 28}
win_set_filter -class via -filter {} -layer {4 25 28}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 0.5 -at_point {65.965 145.215}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {81.920 157.270}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {82.330 157.270}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 0.5 -at_point {96.255 155.425}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {58.165 72.075}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 0.5 -at_point {55.705 95.420}
gui_zoom -window [gui_get_current_window -view] -full
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {84.945 186.500}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {85.630 188.165}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {85.630 188.165}
gui_zoom -window [gui_get_current_window -view] -full
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 0.5 -at_point {100.605 75.455}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {112.230 71.255}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {111.820 71.255}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {108.955 72.485}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {108.950 72.895}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 2 -at_point {108.955 72.890}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 0.5 -at_point {108.520 73.405}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 0.5 -at_point {108.545 73.405}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 0.5 -at_point {108.545 73.405}
gui_zoom -window [gui_get_current_window -types Layout -view] -factor 0.5 -at_point {105.060 75.350}
gui_zoom -window [gui_get_current_window -view] -full
save_block
exit
